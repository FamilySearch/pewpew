# Run this file with the test-server, then specify the PORT as a parameter to this try or run script.

vars:
  port: "${e:PORT}"
  createName: 'test:loadtest-'
  groupRate: 2

load_pattern:
  - !linear
      from: 100%
      to: 100%
      over: 5s

providers:
  group_range: # Counter for creating groups
    !range
  group_created: # will auto_return until deleted
    !response
      auto_return: if_not_full

loggers:
  test:
    to: !stderr

endpoints:
  - method: POST
    url: http://localhost:${v:port}
    tags:
      type: create group
    body: !str '{
        "id":"${v:createName}${x:start_pad(${p:group_range}, 6, "0")}",
        "name":"TEST-GROUP"
      }'
    provides:
      group_created:
        query:
          select: response.body.id
          where: response.status == 200 || response.status == 409
        send: block
    peak_load: '${v:groupRate}hps'
    logs:
      test:
        select: '`POST   ${response.body.id}`'

  - method: PUT
    url: http://localhost:${v:port}
    tags:
      type: create group data
    body: !str '{
      "id":"${p:group_created}",
        "data":{
          "subdata":"TEST-DATA"
        }
      }'
    peak_load: '${x:${v:groupRate} * 5}hps'
    logs:
      test:
        select: '`PUT    ${group_created}`'

  - method: DELETE
    url: http://localhost:${v:port}?id=${p:group_created}
    peak_load: ${x:${v:groupRate} / 2}hps # delete at a lower rate than create
    no_auto_returns: true # Turn off auto_return since it's deleted
    logs:
      test:
        select: '`DELETE ${group_created}`'

