# Run this file with the test-server, then specify the PORT as a parameter to this try or run script.

vars:
  port: "${e:PORT}"

load_pattern:
  - !linear
      from: 100%
      to: 100%
      over: 5s

providers:
  a: !range
  b: !response
  c: !response
  d: !response
  e: !response
  f: !response

loggers:
  test:
    to: !stderr

endpoints:
  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"a": ${p:a}}'
    provides:
      b:
        query:
          select: response.body.a
        send: block
    on_demand: true

  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"b": ${p:b}}'
    provides:
      c:
        query:
          select: response.body.b
        send: block
    on_demand: true

  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"c": ${p:c}}'
    provides:
      d:
        query:
          select: response.body.c
        send: block
    on_demand: true

  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"d": ${p:d}}'
    provides:
      e:
        query:
          select: response.body.d
        send: block
    on_demand: true

  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"e": ${p:e}}'
    provides:
      f:
        query:
          select: response.body.e
        send: block
    on_demand: true

  - method: POST
    url: http://localhost:${v:port}
    body: !str '{"f": ${p:f}}'
    peak_load: 1hps
    logs:
      test:
        select: response.body.f
