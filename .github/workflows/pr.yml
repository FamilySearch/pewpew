on:
  pull_request:
    paths:
      - '**.rs'
      - '**/Cargo.toml'

name: Pull Request
jobs:
  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy 
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings

  deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --version 0.9.0 cargo-deny
      - uses: actions-rs/cargo@v1
        with:
          command: deny
          args: check --hide-inclusion-graph license sources advisories


  wasm-pack:
    name: Wasm Build
    runs-on: ubuntu-latest
    env:
      working-directory: ./lib/config_wasm
      test-directory: ./lib/config_wasm/tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --version 0.8.1 wasm-pack

      - name: Create the Web Assembly
        id: wasm_pack
        run: |
          set -x
          wasm-pack build --release -t nodejs
        working-directory: ${{env.working-directory}}
        shell: bash

      - name: Use Node.js 12.x
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
      - name: Install Dependencies
        run: npm ci
        working-directory: ${{env.test-directory}}
      - name: Run Acceptance Tests
        run: npm test
        working-directory: ${{env.test-directory}}
