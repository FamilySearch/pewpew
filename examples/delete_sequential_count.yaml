# Run this file with the test-server, then specify the PORT as a parameter to this try or run script.

# This file will delete sequentially until we get 50 (createdId.end) calls

vars:
  port: "${e:PORT}"
  ingestName: 'test:loadtest-'
  maxEmptySearch: 20

load_pattern:
  - !linear
      from: 100%
      to: 100%
      over: 60m # Doesn't really matter since once createdId runs out it will exit.

config:
  client:
    headers:
      TestTime: '${x:epoch("ms")}'
      Accept: application/json

providers:
  createdId:
    !range
      start: 1
      end: 50 # How many to delete. total time should be this / peak_load


loggers:
  test:
    to: !stdout

endpoints:
  - method: DELETE
    url: 'http://localhost:${v:port}?id=${v:ingestName}${x:start_pad(${p:createdId}, 6, "0")}?include-children=true'
    tags:
      status: ${x:${p:response}.status}
    peak_load: 10hps
    logs:
      test:
        select:
          ts: epoch("ms")
          id: '`${ingestName}${start_pad(createdId, 6, "0")}`'
