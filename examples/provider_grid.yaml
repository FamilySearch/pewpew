# Run this file with the test-server, then specify the PORT as a parameter to this try or run script.

# Calls an endpoint to get a grid of items (parts of an image?), then puts the list of x,y coordinates on the `b` provider

vars:
  port: "${e:PORT}"
  groupRate: 1

load_pattern:
  - !linear
      from: 100%
      to: 100%
      over: 15s

providers:
  a: # Counter for creating groups
    !range
  b: !response

loggers:
  test:
    to: !stderr

endpoints:
  - method: POST
    url: http://localhost:${v:port}
    body: !str '{
        "id":"image${x:start_pad(${p:a}, 6, "0")}",
        "level":${x:random(11,14)},
        "width":${x:random(6,16)},
        "height":${x:random(6,20)}
      }'
    provides:
      b:
        query:
          select:
            id: response.body.id
            level: response.body.level
            x: for_each[0]
            y: for_each[1]
          for_each:
            - range(0, Math.min(8, response.body.width)) # Grab at most 8
            - range(0, Math.min(8, response.body.height)) # Grab at most 8
          where: response.status == 200 && response.body.width > 0 && response.body.height > 0
        send: block
    peak_load: ${v:groupRate}hps

  - method: GET
    url: http://localhost:${v:port}?id=${x:${p:b}.id}&level=${x:${p:b}.level}&x=${x:${p:b}.x}&y=${x:${p:b}.y}
    peak_load: ${x:${v:groupRate} * 40}hps
    logs:
      test:
        select:
          id: b.id
          level: b.level
          x: b.x
          y: b.y

